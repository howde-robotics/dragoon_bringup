<launch>
  <!-- Loads urdf -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find dragoon_bringup)/urdf/dragoon.urdf.xacro' use_nominal_extrinsics:=false"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- realsense d435i -->
  <include file="$(find dragoon_bringup)/launch/include/realsense.launch">
  </include>
  
  <!-- imu coordinate transformer -->
  <node pkg="imu_coordinate_transformer" type="imu_coordinate_transformer" name="imu_coordinate_transformer" output="screen"/>

  <!-- Seek Thermal driver -->
  <node pkg="seek_driver" type="seek_driver" name="seek_driver">
  </node>

  <!-- velodyne driver -->
  <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
    <arg name="device_ip" value="192.168.1.201" />
    <arg name="frame_id" value="horizontal_laser_link" />
    <arg name="laserscan_resolution" value="0.0035" />
  </include>

  <!-- Health Monitor -->
  <include file="$(find dragoon_bringup)/launch/include/health_monitor.launch">
	<arg name="error_thres" value="2.5" />
	<arg name="monitor_rate" value="20" />
  </include>

<!-- RGB detection to relative location -->
 <include file="$(find dragoon_bringup)/launch/include/rgb_human_detection.launch">
 </include>

<!-- Thermal detection to relative location -->
 <include file="$(find dragoon_bringup)/launch/include/thermal_human_detection.launch">
 </include>

<!-- Wire core for kalman filtering -->
`<include file="$(find wire_core)/launch/start.launch">
 </include>

<!-- Detection filter -->
 <include file="$(find dragoon_bringup)/launch/include/detection_filter.launch">
 </include>

<!-- Cartographer -->
<include file="$(find dragoon_bringup)/launch/include/dragoon_cartographer.launch">
</include>

  <!-- RVIZ
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find dragoon_bringup)/rviz/dragoon_rviz.rviz" />
	-->
</launch>
